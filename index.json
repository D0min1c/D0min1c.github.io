[{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"GCP Network 서비스 중 CLB와 Instance_group에 대해 빠르게 훑어봤습니다.\n배경 Load Balancing (이하 LB)는 Client로부터 들어오는 트래픽을 여러 Backend Server (Instance, VM)에 분산하는 기능을 가지고 있습니다. 이를 통해 트래픽에 의해 Backend Server의 리소스가 과다하게 점유되어 서버가 터지는 것을 방지하고자 트래픽 즉 부하들을 분산시켜 서비스의 고가용성을 얻음과 동시에 성능적인 이점을 가져갈 수 있습니다.\nLB를 사용한다고 항상 이로움만 얻을 수 있는 것은 아닙니다.\n백엔드 서비스가 빵빵해도 LB 즉 프론트 단의 QPS의 한계로 인해 client의 request를 Drop시키는 경우도 있기 때문입니다.\nLB에서 SSL offloading을 통한 백엔드 서비스의 부하를 줄일 수 있는거고 반대로 L4의 부하를 줄이기 위해 백엔드에서 SSL handshaking을 할 수 있는 것처럼 주어진 상황에 맞게 구성하는 것이 중요합니다.\nAWS에서 Elastic Load Balancing로 서비스되는 것처럼 GCP의 로드밸런서는 CLB(CloudLoadBalancer)로 서비스합니다.\nGCP에서 서비스하는 LB의 특징들을 요약해봤습니다.\n우선 CLB의 서비스적인 특징에 대해 확인해보겠습니다.\nCLB의 특징  프런트엔드 역할을 하는 단일 anycast IP address AWS의 ELB를 사용하던 유저들은 다소 생소할 수 있습니다. 왜냐면 AWS ELB는 FQDN을 통해 ELB를 제공하기 때문입니다.  이는 AWS ELB의 Node라는 개념에 의해 어쩔 수 없이 Endpoint로 FQDN을 제공할 수 밖에 없는 AWS의 특징입니다. 그러나 GCP CLB는 트래픽을 IP를 통해 받을 수 있도록 프런트엔드에 external IP를 부여할 수 있습니다.\n  **백엔드의 자동 지능형 자동 확장 **\n  LB는 SDN 형태로 Software 적으로 만들어진 것이며, 기존의 물리적인 장비가 갖고 있던 하드웨어적 처리 성능 한계를 갖지는 않습니다.\n  SDN의 특성 상, 개념적인 하나의 LB가 하나의 Software Process를 의미하지 않으며, 필요에 따라 (백엔드 구성에 맞물려) 실제의 Data Plane을 담당하는 구성요소는 수평 확장되는 구조입니다.\n  위의 특성들에 의해 전반적으로 성능의 한계는 Backend Services의 규모/구성에 의해 결정되는 요소가 오히려 더 크다고 볼 수 있습니다.\n  병목현상이 일어난다면 AWS는 node에 대한 이슈까지도 염두해두지만 GCP에서는 QPS에 대한 측정 자료나 Backend latency, Total latency 등의 값을 참고하는 것이 이슈를 해소하기 좋습니다.\n    단일 리전에서 애플리케이션을 사용할 때의 리전 부하 분산\n  전 세계에서 애플리케이션을 사용할 때의 전역 부하 분산 (Premium 등급의 Network Tier가 필요)\n  CLB 백단에 있는 모든 백엔드가 auto scaling되진 않습니다. 인스턴스 그룹이 관리형(Managed)인지 비관리형(unManaged)인지에 따라 다르게 동작하며 이 부분은 인스터스 그룹에 대한 이해가 필요합니다.\n  캐시된 콘텐츠 전달을 위한 Cloud CDN과의 통합\n   기본적으로 5-tuple hash 기반의 부하분산을 지원하지만, Statefull한 애플리케이션을 구성했을 경우를 대비하여 세션 어피니티를 지원합니다. 세션 어피니티는 백엔드가 정상이고 용량이 있는 한 동일한 클라이언트의 모든 요청을 동일한 백엔드로 전송합니다.   Cloud Load Balancer 기초 크게 백엔드 서비스, 호스트 및 경로규칙(HTTP/s), 프런트 엔드로 나뉘며 각기 항목별 세부적인 항목들이 있습니다.\nBackend  백엔드 유형 / backend port / 인스턴스 그룹 / 밸런싱 모드 / A capacity scaler / 타임아웃 / 세션어피니티 / 헬스체크 (포트 or 경로)  호스트 및 경로 규칙 (HTTP/s)  호스트 / 경로 / 백엔드  FrontEnd  프로토콜 / 네트워크 계층 / external IP / Front Port  CLB의 종류 - HTTP/HTTPS Load Balancing - TCP/UDP Load Balancing - TCP/SSL Proxy Load balancing CLB는 어느 프로토콜을 지원하는지에 따라 3가지의 종류로 나뉘어집니다.\nHTTP(S), TCP, TCP proxy LB의 차이를 확인해야 헷갈리지 않습니다.\nHTTP/HTTPS Load Balancing  7계층에서 동작합니다. 여러가지 백엔드 유형을 지원하며, 대상 HTTP(S) 프록시는 클라이언트로부터 요청을 받습니다. HTTP(S) 프록시는 트래픽 라우팅을 결정하기 위해 URL 맵을 사용하여 요청을 판단(컨텐츠 기반 부하분산)합니다. 프록시는 SSL 인증서를 사용하여 통신을 인증할 수도 있습니다. 세션 유지 시간은 600초로 고정되어있습니다.  (websocket에는 적용되지않지만, 일반적으로 백엔드가 조기에 세션을 끊는 일이 발생하지 않도록 600초보다 길게 KeepAliveTime Out값을 설정하는 것이 좋습니다.)\n websocket을 지원합니다. gPRC를 지원합니다. (AWS ALB에도 2020년 11월 추가됐습니다.) QUIC를 지원합니다 . (Quick UDP Internet Connections / HTTP3 )  TCP/UDP proxy Load Balancing  4 계층에서 동작합니다. TCP 연결을 통해 들어오는 트래픽이 부하 분산 레이어에서 종료된 후 TCP 또는 SSL을 통해 사용 가능한 가장 가까운 백엔드로 전달됩니다. 자동으로 트래픽을 사용자와 가장 가까운 백엔드로 라우팅합니다. TCP 80 or 8080 Port를 지원하지 않습니다. (HTTP/s LB로 쓰면됩니다.) TCP 프록시 부하 분산기는 역방향 프록시 부하 분산기입니다. 부하 분산기는 수신 연결을 종료한 후 부하 분산기에서 백엔드로 새 연결을 엽니다. 역방향 프록시 기능은 Google 프런트엔드(GFE)에서 제공합니다. 가장 많이 사용되는 TCP 포트 지원: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 3389, 5222, 5432, 5671, 5672, 5900, 5901, 6379, 8085, 8099, 9092, 9200, 9300.  TCP/UDP Load Balancing  4 계층에서 동작합니다. pass-through LB 입니다. (글로벌 서비스를 위해 백엔드에서 모든 Ingress IP/port에 대한 허용이 필요합니다. ) 수신(ingress)/요청(request) 패킷만 lb를 통과 - 송신(engress)/응답(response) 패킷은 lb를 거치지 않고 바로 client로 가는 DSR로 동작합니다.  부하 분산된 패킷은 소스 IP가 변경되지 않은 백엔드 VM에서 수신됩니다. 부하 분산된 연결은 백엔드 VM에 의해 종료됩니다. 백엔드 VM의 응답은 부하 분산기를 통하지 않고 클라이언트에 직접 전달됩니다. (위에서 설명한 DSR이 이것입니다.)   연결 추적 테이블과 구성 가능한 일관된 해싱 알고리즘을 사용하여 트래픽이 백엔드 VM에 분산되는 방식을 결정합니다. Proxy가 아닙니다. 그렇기에 모든 트래픽은 proxy가 아닌 LB를 통해 전달되며 동일한 지역의 VM 인스턴스 간에만 트래픽을 분산합니다. 앞서 HTTP/s, TCP/UDP proxy LB들과 같은 Regional LB와는 달리 전달 규칙을 사용하여 수신 IP 프로토콜 데이터를 기반으로 시스템의 부하를 분산합니다. 백엔드 VM이 비정상 상태여도 TCP 패킷에 응답하면 세션을 다른 백엔드 VM으로 넘기지 않습니다.  이 LB를 선택하는 이유는 TCP/UDP proxy LB에서 지원하지 않는 포트에서 부하분산을 구성할 때 사용합니다.\nSSL offloading 당연하게도..SSL Offloading을 지원합니다.\nAWS에서는 ACM 에서 발급이 가능했다면 GCP 또한 google Managed SSL 인증서를 지원합니다.\nGoogle 관리형 SSL 인증서는 도메인에서 Google Cloud가 가져오고 관리하는 도메인 유효성 검사(DV) 인증서입니다. 각 인증서에서 여러 호스트 이름을 지원하며 Google은 인증서를 자동으로 갱신합니다.\n이를 통해 External HTTPs LB, SSL proxy LB를 구성할 수 있습니다.\n사용하면서 배운 것들 1. LB를 사용할 때 백엔드 서비스 구성 우선 LB의 백엔드 구성 간 선택지는 기본적으로 백엔드 서비스, 버킷, TCP에는 인스턴스 Pool을 직접 연결하기도 하지만 저의 경우 GCP 내의 VM으로 트래픽을 전달받아야하기 때문에 백엔드 서비스의 인스턴스 그룹 혹은 인스턴스 Pool로 셋팅합니다.\n이때 그룹의 종류가 두가지로 나뉘는데 앞서 1편에서 말했던 인스턴스 그룹의 두 종류인 비관리형(Unmanaged Instance Group)과 관리형(Managed Instance Group) 그룹입니다.\n1-1 MIG는 단일 region 내 멀티 zone에 VM 인스턴스를 분산함으로써 single zone failure 에 대응하여 워크로드의 고가용성을 높일 수 있습니다.\n예를 들어, zonal failure 가 발생하거나 특정 zone 내에 위치한 인스턴스들에 장애 발생시, regional MIG 에 포함된 다른 zone에서 실행되는 인스턴스가 트래픽을 처리함으로써 고가용성을 구성할 수 있습니다.\n[MIG 의 특징]\n  애플리케이션 로드를 멀티 zone 으로 분산\n  최대 2,000개의 인스턴스까지 관리 가능 (zonal MIG의 2배)\n  멀티 zone 을 사용함으로써 zonal failure 및 단일 zone 내 인스턴스 그룹의 오작동과 같은 시나리오로부터 보호\n  zonal failure 발생 혹은 zone 내 인스턴스 장애시, regional MIG에 포함된 다른 zone 에서 트래픽을 처리\n  1-2 UIG는 단순히 같은 zone내의 인스턴스들을 집합화 시킨 server pool이라고 이해하면 됩니다.\n인스턴스 템플릿이 필요하지 않습니다. 단지 같은 zone내의 인스턴스라면 그룹화시켜 LB를 통해 트래픽을 받을 수 있습니다.\nUIG를 사용할지 MIG를 사용할지는 어떤 서비스를 제공하는지에 따라 다릅니다. [제가 근무하는 인프라실에서는 UIG로 구성합니다.]\nMIG는 동일한 구성의 인스턴스를 여러 개 만들기 위한 것입니다. 기존 인스턴스 템플릿을 업데이트하거나 생성된 인스턴스 템플릿을 변경할 수 없습니다. 구성을 변경해야 하는 경우 새 인스턴스 템플릿을 만듭니다.\n그러나 UIG는 전혀다른 스펙과 구성의 인스턴스들을 그룹핑 시킬 수 있습니다.\n따라서 서비스의 특성 상 순간적인 트래픽이 발생하기보단 꾸준한 유저들의 동접 수를 대응하기에 예상 트래픽의 최대치를 기준으로 서버를 생성하고 일정기간 모니터링하여 optimizing하는 방법으로 GCP를 활용하고 있습니다.\n2. Global HealthCheck AWS를 사용할때는 ALB의 sg를 참조하여 백엔드 EC2의 보안그룹을 유연하게 구성했다면, 다행히 GCP LB에서는 LB에 node 개념이 없습니다.\n다만, Global HC라고하는 백엔드에 연결하는 전역 및 리전별 상태 확인 시스템을 제공합니다.\n Global Healthcheck가 존재합니다. (백엔드 서비스의 방화벽에서 필수적으로 Ingress를 허용해줘야 합니다. )  각 연결 시도를 프로브라고 부르고, 각 상태 확인 시스템을 프로버라고 부릅니다.\n3. 인스턴스와 인스턴스 그룹 재사용 하나의 인스턴스는 동시에 여러 인스턴스 그룹에 그룹핑될수 없습니다.\n만약 한대의 인스턴스 내에 여러 서비스가 올라가있는 상태라면 Instance Group으로 나눌수는 없으니 백엔드 포트를 서비스 마다 열어두고,\n한대의 인스턴스 그룹을 여러 LB로 연결하는 방식으로 재사용 해야합니다.\n4. 결론 결론적으로 CLB는 유저의 Ingress/Request에 대한 트래픽을 어떤 프로토콜을 통해 받아서 어떤 방식으로 백엔드에 전달하는가에 따라 종류가 나뉘어지며\n크게는 OSI 7 Layer에 의해 (HTTP, TCP/UDP)로 나뉘며, Traffic Flow 자체는 Front 단에서의 전송방식 및 Egress/Response를 기준으로 구별합니다. (Proxy의 유무)\nHTTP/s or TCP (Proxy) LB의 경우\n IPv4, IPv6 프로토콜을 모두 지원하며, 전달 규칙(Forwarding rule)을 HTTPS proxy에서 URL map을 통해 각 백엔드 서비스로 프록시 처리됩니다. 네트워크 등급에 따라 Global, Regional LB의 지원 여부가 달라집니다. 기본적으로 균등하게 부하를 분산하지만, 아주 작은 수의 요청은 균등하게 분배되지 않을 수 있습니다 Session affinity를 통해 해시를 기반으로 특정 클라이언트의 요청을 동일 백앤드 VM으로 전달하도록 설정 할 수 있습니다. SSL offloading을 지원합니다.  GCP에서 제공하는 LB 선택 로드맵입니다.\nLoadbalancing Test 부하분산이 정상적으로 이뤄지고 있는지 확인해봅시다.\n목차 [1. HTTP/s LB 테스트] [2. TCP LB 테스트] [3.TCP porxy LB 테스트]  인스턴스 그룹 생성 기본적으로 백엔드 서비스는 UIG로 생성할 예정이며 단일 존 내부에 두대의 Web service를 띄워 확인해보겠습니다.\n상태 검사 생성 우선 Http-80으로 상태 검사를 진행할 예정입니다. 고고\nHTTP/s LB-Test LB 생성 HTTP Backend 생성 HTTP 검토 및 확인 나머지 LB들도 동일하게 구성하면 되기에 configuration에 대한 내용은 여기까지\u0026hellip;! Test 를 하러갑시다.\n(TCP LB는 그룹이 아닌 인스턴스 Pool로 등록 / TCP LB생성 간 단일리전으로 선택하면 TCP proxy가 아닌 TCP LB로 구성을 도와줍니다.)\nTest 1. Health check 확인 LB를 생성하고 나면 정상상태의 인스턴스가 확인되지 않는다. 당연히 80포트의 데몬이 떠있질 않으니, 헬스체크가 안되는겁니다.\n우선 인스턴스 방화벽에서 35.191.0.0/16,130.211.0.0/22 80 Ingress를 허용해준 뒤, 얼른 서버로 접근하여 httpd를 띄워봅시다~\n http 데몬을 올린 뒤, 설정해둔 상태검사 포인트만큼 수십초를 기다리면 금방 헬스체크가 되는 모습을 볼 수 있습니다. F5를 다다다닷 누르기는 싫어서 curl을 실행하는 간단한 스크립트를 통해 확인해본 결과,\n#!/bin/bash number=0 while [ $number -le 50 ] do curl 34.98.79.168 \u0026gt;\u0026gt; $(date +\u0026quot;%y%m%d\u0026quot;).txt sleep 3 ((number++)) done Web 1번 22회, Web 2 29회가 확인됩니다. 왜 정확히 반반 나뉘지 않는걸까요?\n-# GCP의 설명 #-\n\u0026quot;- 기본적으로 균등하게 부하를 분산하지만, 아주 작은 수의 요청은 균등하게 분배되지 않을 수 있습니다\u0026quot;\n\u0026hellip;흠..🤣🤣🤣🤣🤣🤣\nAccess log 확인 그럼 실제 서버에서는 어떻게 요청이 오는지 Access.log를 통해 확인해보겠습니다.\nHC 대역인 35.191.0.0/16으로 Healthcheck와 Client의 요청과 결과가 잘 찍혀있네요.\n왜 HC 대역이 access log에 남는걸까요?\n실제 부하 분산 트래픽의 소스 IP 주소는 상태 확인 프로브 IP 범위와 같기 때문입니다.\n부하 분산기는 수신 연결을 종료한 후 부하 분산기에서 백엔드로 새 연결을 엽니다.\n이후 target proxy에서 URL map을 통해 백엔드 서비스쪽으로 reverse proxy하기에 백엔드 서비스는 실제 Source IP를 알 수 없는겁니다.\nSource IP가 필요하다면 X-forward-for Header를 통해 확인 할 수 있습니다.\nHTTP backend session affinity 생성해놨던 HTTP LB의 백엔드 구성에서 cookie를 생성해줍니다. 생성된 쿠키 어피니티가 설정되면 LB가 첫 번째 요청에서 쿠키를 생성합니다.\nLB는 동일한 쿠키를 사용하는 각 후속 요청에서 같은 백엔드 VM 또는 엔드포인트로 요청을 전달합니다.\nGCLB라는 cookie가 확인됩니다. 쿠키 값을 통해 고정 세션을 유지할 수 있습니다. 영원히 세션이 고정되는것은 아닙니다.\nTimeout으로 설정해둔 (HTTP는 Keep AliveTimeout값이 제한 시간 값을 따라갑니다.) 30초 후엔 새로운 세션이 연결됩니다.\n위 결과, (31초 후 curl -i 동작) 31초마다 세션이 바뀌는걸 확인할 수 있습니다.\n","date":"June 25, 2021","hero":"/posts/cloud/gcp/gcpnetwork-2/images/thumnail.jpg","permalink":"https://hugo-toha.github.io/posts/cloud/gcp/gcpnetwork-2/","summary":"\u003cp\u003eGCP Network 서비스 중 CLB와 Instance_group에 대해 빠르게 훑어봤습니다.\u003c/p\u003e","tags":null,"title":"GCP CLB, Instnace_group"},{"categories":null,"contents":"제목은 GCP VPC에 대해서 메모라고 하겠습니다. 이제 약간 AWS VPC를 곁들인..\n배경 GCP를 통해 클라우드를 입문하셨거나, AWS를 사용하다가 GCP로 넘어오신 분들, 갑작스런 변화에 살짝 오잉? 하셨을겁니다.\n저는 저만의 오잉 포인트들을 모아서 기록해두었습니다. 고고\nGCP의 VPC (Virtual private cloud) GCP의 VPC에 대해 우선 짚어봅시다.\nVPC (Virtual private cloud)란, 간단하게 클라우드 환경 상의 논리적으로 격리된 개개인의 사설 네트워크 망을 말합니다.\n보통 AWS의 인프라 환경은 굉장히 계층적인 구조를 보여줍니다.\n가령, 리전(국가) 내에 여러 가용영역(도시)들이 있으며 가용영역들은 1개이상의 개별 데이터센터로 구축되어있습니다.\n또한 가용영역 간 동기복제를 수행하기 떄문에 사용자는 여러 리전, 가용영역들에 애플리케이션을 배포함으로써 고가용성의 이점을 얻을 수 있습니다.\n들어가기 앞서 기본적으로 AWS GCP의 공통사항을 먼저 다루자면\n서브넷에 이미 AWS(GCP)에서 예약해놓은 IP 주소들이 있다는 점 참고해주세요.\nx.x.x.0 / x.x.x.1 / x.x.x.254 / x.x.x.255\n 구조적 차이를 이해하자! AWS는 말그대로 계층적인 구조를 가지고 있습니다.\n Virtual Private Cloud(VPC) — 사용자의 AWS 계정 전용 가상 네트워크입니다. 서브넷 — VPC의 IP 주소 범위입니다. 라우팅 테이블 — 네트워크 트래픽을 전달할 위치를 결정하는 데 사용하는 라우팅이라는 이름의 규칙 집합입니다. 인터넷 게이트웨이 — VPC의 리소스와 인터넷 간의 통신을 활성화하기 위해 VPC에 연결하는 게이트웨이입니다.  VPC는 리전에 연결되어 Cidr값을 지정하고 Cidr값을 subnetting하여 각 가용영역에 지정합니다.(인스턴스를 생성해야하니까요!?)\nGCP는 다릅니다. 애초부터 VPC가 리전에 종속되지 않습니다.\nGCP의 VCP는 특정 가용영역과 리전에 종속되지 않는 전역 리소스입니다. GCP에서의 전역리소스는 동일 프로젝트 내의 모든 영역에 있는 모든 리소스가 엑세스 할 수 있다는 뜻입니다.\n Virtual Private Cloud(VPC) — 사용자의 GCP 계정 전용 가상 네트워크입니다. 서브넷 — VPC의 IP 주소 범위입니다. 아닙니다. 각 가용영역 (GCP에선 zone)의 대역입니다. 라우팅 테이블 — 네트워크 트래픽을 전달할 위치를 결정하는 데 사용하는 라우팅이라는 이름의 규칙 집합입니다. 인터넷 게이트웨이 — VPC의 리소스와 인터넷 간의 통신을 활성화하기 위해 VPC에 연결하는 게이트웨이입니다.  AWS에서 도쿄리전과 서울리전의 각각의 인스턴스를 두고 있고 서로 통신이 필요할 경우, 별도의 분리된 VPC 간의 통신을 지원할 무언가가 필요한 상황입니다.\n그러나, GCP의 서브넷이 리전에 연결되기에 단지 내부 라우팅을 열어줌으로써 도쿄 리전의 인스턴스와 서울리전의 인스턴스가 통신이 가능하게 된다는 말입니다.\nVPC는 리전에 종속되지 않습니다. VPC 내 서브넷들이 각 리전에 연결되어 Cidr값을 지정하고 Routing Table, Firewall rule에 따라 트래픽의 흐름을 보여줍니다.\nVM의 중단없이 Subnet의 확장이 가능합니다.\n차이를 하나만 더보자면 아마 피어링 ? (VPC Peering) 각 벤더에서 VPC 간 트래픽을 라우팅 하고자할때 위와같은 특성에 의해 고려해야될 부분들이 있습니다.\nAWS는 이래요 동일 리전의 VPC 간 peering, 계정 간 VPC peering, 리전간 VPC peering으로 나뉩니다.\n이때 3가지 방법 모두 라우팅 테이블에 peering connect를 만들어 서로 본인의 사설 Cidr 값을 라우팅으로 추가해주어야 합니다.\nGCP는 서로다른 Organization, project 간 VPC 피어링만 고민하면된다. 리전 간 통신은 위 설명대로 방화벽으로 제어하며, 방화벽 상에서 서로의 서브넷을 ingress, Egress로 추가한 네트워크 태그를 인스턴스에 추가하여 허용할 수 있기 때문에 서로 다른 Org 간 혹은 Project 간의 Priavte 통신이 필요한 경우에만 고려하면 됩니다.\nVPC peering을 고려한다면 AWS든 GCP든 subnet을 겹치게 생성하지 말자. 중요합니다. 만약 AWS든 GCP든 VPC를 분리하여 사용하고자 할 때 (가령 중앙화나 로그수집에 대한 인프라 구축, VPN 등) 서브넷의 대역이 겹쳐 피어링을 맺지 못한다면 Public IP 간 통신을 해야합니다. 트래픽이 Global 망을 타고 나갔다 들어오기 떄문에 보안적으로도 비용적으로도 성능적으로도 좋지 못한 구성이기 때문입니다.\n대역이 겹치는 이슈 이외에도 몇가지 제한되는 사항들이 있는데, 이는 각 벤더 문서에서 VPC peering을 검색해보면 됩니다. 가령 미리 예약해둔 4개의 IP (Brodcast IP)등 일반적으로 예약되는 RFC 범위에 대해 제한사항이 있습니다. 아래는 공통적으로 제한되는 부분에 대해서만 서술해두었습니다.\n제한사항   피어링된 한 VPC 네트워크의 서브넷 CIDR 범위는 다른 피어링된 네트워크의 대역과 겹칠 수 없습니다.\n 제.곧.내 (제목이 곧 내용)    직접 피어링된 VPC끼리만 통신이 가능합니다.\n  가령 A, B, C VPC가 있다고 가정하였을때, A \u0026lt;-\u0026gt; B 사이에 peering을 구성해놓고, 이후 B\u0026lt;-\u0026gt;C의 피어링을 맺으면 중간의 B VPC가 마치 Hub의 역할을 하여 A\u0026lt;-\u0026gt;C도 connection이 이뤄진다고 생각할 수 있습니다.\n결론부터 말하자면 불가능합니다.\nVPC peering의 connection은 각각 독립적인 Connection이기에 위와같은 구조를 원한다면 AWS Trangit Gateway를 통하거나, 처음부터 B\u0026lt;-\u0026gt;C의 peering을 설정하면 되는 문제입니다.\n    제한사항은 아니지만 보통 피어링이 성공적으로 Connection이 이뤄졌는데도 불구하고, 서버 간 통신이 안되면 라우팅경로와 서버의 보안그룹(방화벽)등을 확인해야 합니다.\n  GCP VPC와 나아가 Network Peering에 대해 간단하게 풀어봤습니다.\n추후에는 VPC flow logging과 일명 \u0026ldquo;고급 VPC\u0026quot;에 대해 메모해놓을 예정입니다.\n감사합니다.\n","date":"June 24, 2021","hero":"/posts/cloud/gcp/gcpnetwork-1/images/gcp_vpc.jpg","permalink":"https://hugo-toha.github.io/posts/cloud/gcp/gcpnetwork-1/","summary":"\u003cp\u003e제목은 GCP VPC에 대해서 메모라고 하겠습니다. 이제 약간 AWS VPC를 곁들인..\u003c/p\u003e","tags":null,"title":"Google Cloud Network 기초"},{"categories":null,"contents":"GCP에서 발생하는 host error 외 이상한 경험에 대해 간략하게 적어두었습니다.\n배경 지난번 AWS이슈에 이어 GCP에서의 이슈에 대해 정리해보았습니다.\n우선 Host error에 대해 GCP의 Compute Engine은 소프트웨어 또는 하드웨어 업데이트와 같은 호스트 시스템 이벤트가 발생하더라도 가상 머신 인스턴스가 계속 실행될 수 있게 해주는 라이브 마이그레이션 기능을 제공합니다.\nCompute Engine은 사용자가 VM을 재부팅할 필요 없이 동일 영역에서 실행 중인 인스턴스를 또 다른 호스트로 라이브 마이그레이션합니다.\n이렇게 해서 Google은 사용자의 VM에 영향을 주지 않으면서도 인프라를 보호하고 안정적인 상태로 유지하는 데 반드시 필요한 유지보수를 수행할 수 있습니다. (GPU가 연결된 인스턴스는 불가능하다는 점 !)\nGCP도 역시 Host Error가 발생합니다. 자동으로 올라오지만, 마찬가지로 모니터링 및 트리거를 걸어 Reboot try 로직을 걸어두심이 좋습니다.\n다시한번 말하지만 세상에 100% 안죽는 서버는 없습니다. (사장님 이젠 죽을거 같습니다)\n그렇게 때문에 항상 DR 프로세스에 대한 준비는 해두어야합니다. 이것은 클라우드 위의 인프라도 마찬가지 입니다.\n클라우드는 공동 책임 모델 등 SLA를 명확하게 보여주기에 어느정도의 가용성을 보장하는지가 알려줍니다.\n가령 99.999%를 보장하는 서비스는 최소 1년에 0.001%의 보장할 수 없는 서비스 중단시간이 발생할 수 있다는 소리입니다.\n31536초면 약 9시간쯤 되겠네요.\n역시나 운영비를 늘려 서버를 고가용성으로 구성하는것이 가장 바람직하지만 백업과 모니터링에 집중하여 일정부분 타협이 가능할 것 같습니다.\n실제로 이런 일이 있습니다. (가용영역의 리소스 부족) GCP, AWS를 막론하고 내가 원하는 가용영역에 리소스가 부족하는 경우가 있습니다. 이때 서버 생성이 불가함은 물론이거니와, 이미 있던 내 서버들이 갑작스레 Host error등으로 죽었는데, host hardware의 리소스가 부족해서 VM migration이 발생하지 않으면 어떻게 될까요? 어떻게 되긴 뭘 어떻게 됩니까. 큰일났지 !!!__!_!😫😫😫\n해결 방안 -1 (zone을 바꿔보자) 쉽게 생각하면 그렇습니다. VM들을 다른 가용 가능한 zone으로 이동시키면 됩니다.\nAWS에서는 스냅샷 혹은 AMI를 통해 인스턴스를 재 구성하였다면 GCP에서는 GCP CLI에서 영역 간 인스턴스 이동을 지원합니다. 옮기는 동안 서버에서 생성한 인스턴스와 디스크의 일부 속성이 변경됩니다.\n변경되는 속성\n이 방법으로 이관하지 못한 이유가 있습니다.\n 비관리형 인스턴스 그룹를 타겟으로한 LB를 운영하고 있습니다. - 비관리형 인스턴스 그룹은 영역끼리 그루핑해야하기에 같은 그룹의 인스턴스를 전부 이관해야합니다. 그렇다고 관리형 인스턴스 그룹은 되느냐? 그것도 아닙니다. 관리형 인스턴스 그룹의 구성일 경우 서브넷 변경까지 필요합니다. UEFI 기반 VM는 위 CLI를 통해 자동으로 존 변경이 불가합니다. - 수동으로 진행하면 됩니다. 대략적인 작업 흐름은 아래와 같습니다. (수동, 자동 동일)  원본 인스턴스에 연결된 영구 디스크의 스냅샷을 만듭니다. 대상 영역에 영구 디스크의 사본을 만듭니다. 외부 및 내부 IP 주소: 동일한 리전 내의 영역 간에 인스턴스를 이동하고 임시 IP 주소를 보존하려면 인스턴스에 할당된 임시 IP 주소를 고정 IP 주소로 임시 승격한 다음 대상 영역에 만든 새 VM 인스턴스에 할당합니다. 인스턴스를 리전 간에 이동하는 경우에는 VM 인스턴스의 다른 IP 주소를 선택해야 합니다. 대상 영역에 새 인스턴스를 만들고 부팅합니다. 서로 다른 리전 간에 이동하는 경우에는 새로운 인스턴스의 새로운 서브네트워크도 선택해야 합니다. 새로운 영구 디스크를 새로운 인스턴스에 연결합니다. 새 인스턴스에 외부 IP 주소를 할당합니다. 필요한 경우 주소의 수준을 다시 임시 외부 IP 주소로 낮춥니다. 스냅샷, 원본 디스크, 원본 인스턴스를 삭제합니다.   두개 이상의 볼륨을 마운트 하고 있습니다.  결론적으로 우리는 비관리형 인스턴스 그룹으로 그룹핑해놓은 두개이상의 볼륨이 마운트된 UEFI 기반의 VM 구성이기에 CLI를 통해 이관은 불가했습니다. 또한 당장 해당 리전을 사용하는 vm의 갯수가 수 백대는 되기에 현실적으로 어려움이 있습니다.\n해결 방안 -2 (타입을 바꿔보자) 그래서 이 방법을 택했습니다. 모든 인스턴스에 기본적으로 인스턴스 reboot이나 host error 발생 시, 알람을 걸어두었습니다. 혹시라도 Host error 이후 정상화가 되지 않는 특정 존의 인스턴스 경우 이벤트로그를 통해 원인을 확인하고 만약 리소스 부족이 원인이라면 해당 존에서 가용할 수 있는 타입으로 인스턴스를 변경하는 것으로 처리하는 것이지요.\n결론 그래서 결론이 없는 문제입니다. 사고를 미연에 방지하고자한다면 해당 리전/가용영역에 미리 리소스를 선점해두는 방법밖에 없을 것 같습니다.\n","date":"June 23, 2021","hero":"/posts/cloud/gcp/gcpissue/images/host_thumnail.jpg","permalink":"https://hugo-toha.github.io/posts/cloud/gcp/gcpissue/","summary":"\u003cp\u003eGCP에서 발생하는 host error 외 이상한 경험에 대해 간략하게 적어두었습니다.\u003c/p\u003e","tags":null,"title":"서버가 갑자기 박살나셨습니다. -GCP"},{"categories":null,"contents":"AWS EC2 Maintenance에 대해 적어뒀습니다.\n배경 GCP 혹은 AWS를 사용하면 심심치않게 일어나는 서비스이슈, 1년에 한 두번 일어날까말까하는 리전이슈가 있습니다. 서비스마다 대응방법이 다르지만, 우선 가장 비번하게 일어나는 Host hardware 이슈에 대해 기록합니다.\n종종 Host Error! 혹은 Instance check Failed를 경험한 적이 있으시죠? 우선 AWS에서의 이슈에 대해 정리해보았습니다.\nAWS System Check failed 다들 아시다시피 ec2 인스턴스는 AWS에서 Iaas 방식으로 제공하는 서비스이기에 사용자가 해당 ec2 인스턴스를 프로비저닝하게 될 경우 선택한 리전과 가용영역의 데이터 센터 내 host computer에서 hypervisor 위에 고객의 요청에 의해 insatnce를 생성하여 제공하는 방식입니다.\n여기서 만약 hypervisor와 instance간의 Network이 끊긴다면..? 아니면 Host 장비에 불이 난다면\u0026hellip;?\n와장창-! 말 그대로 인스턴스가 와장창 납니다.\n이러한 갑작스러운 이슈로 인해 발생하는 AWS 하드웨어의 Maintenance Event 혹은 System checkfailed 이슈로 인해 발생하는 예기치않은 이슈에 대해 정리하고 사례에 맞춰 사용자들은 어떻게 대처해야하는지에 경험을 공유하고자 합니다.\n들어가기 앞서 모든 AWS Maintenance 는 일정을 조정하는 것이 가능하다는 점 참고해주시면 되겠습니다.\nAWS Maintenance 우선 AWS에서의 EC2 Event 종류와 Cloudwatch에서 확인할 수 있는 Status Check failed 지표는 아래와 같은 내용을 포함합니다.\n  AWS Event\n Instance stop : 예약된 시간에 인스턴스가 중지됩니다. 인스턴스를 다시 시작하면 새 호스트로 마이그레이션됩니다.  이러한 유형은 Amazon EBS가 지원하는 인스턴스에만 적용됩니다.\n Instance retirement Instance reboot System reboot System maintenance    Instance stop : 예약된 시간에 인스턴스가 중지됩니다. 인스턴스를 다시 시작하면 새 호스트로 마이그레이션됩니다.\nInstance stop이 일어나는 경우는 대게 Host hardware의 폐기 날이 결정된 것입니다.\n이 경우, Maintenance 일정 이전에 스스로 stop/start를 진행하여 해소 할 수 있습니다.\n두 눈을 크게 뜨고 정확히 봐야합니다. Instance reboot이 아닌, Stop인 것을요.\nStop되어있는 인스턴스는 어떤 트리거가 발생하기 전까지는 결코 혼자서 벌떡 일어나진 않습니다.\n이러한 유형은 Amazon EBS가 지원하는 인스턴스에만 적용됩니다.  참고로 PHD(persnal Health Dashborad)에서 성능저하로 인해 예약된 이벤트들의 경우 되도록 빨리 인스턴스를 재부팅하여 새 호스트로 마이그레이션하는 것이 좋습니다.\n이미 성능이 저하된 호스트 하드웨어이기에 언제 어떤이슈가 발생할지 모르는 폭탄이기 때문입니다.\nInstance retirement : 예약된 시간에 인스턴스가 Amazon EBS에서 지원되는 경우 중지되거나 인스턴스 스토어에서 지원되는 경우 종료됩니다.\n말 그대로 EBS 지원 인스턴스는 stop, 인스턴스스토어 지원 인스턴스는 terminate되는 이벤트입니다.\n아직 발생해본적이 없어서 패스하겠습니다. (뭐..다를거 있겠냐만..)\nSystem maintenance : 예약된 시간에 네트워크 또는 전력 유지 관리로 인스턴스가 일시적인 영향을 받을 수 있습니다\n네트워크 유지 관리 시에는 예약된 인스턴스의 네트워크 연결이 잠시 동안 끊어집니다. 유지 관리가 완료되면 인스턴스의 네트워크 연결이 평소처럼 복구됩니다.\n전력 유지 관리 시에는 예약된 인스턴스가 잠시 동안 오프라인 상태로 전환되었다가 재부팅됩니다. 재부팅 이후에도 인스턴스의 모든 구성 설정은 그대로 유지됩니다.\n이제 가장 주로 겪은 두가지 이벤트를 다뤄보겠습니다.\n하이라이트 입니다.\nInstance reboot : 예약된 시간에 인스턴스가 재부팅됩니다.\n말그대로 인스턴스의 재부팅을 의미하기에 os에서 reboot하는것과 동일하게 동작합니다.\n메인터넌스 일정 이내에 사용자가 스스로 reboot을 먼저 실행하여 해소하는 방법과 메인터넌스 일정에 자연스럽게 해소하는 방법이 있습니다. EBS 볼륨의 데이터는 영향을 받지 않습니다.\n유의사항으로는 인스턴스 재부팅 시 인스턴스스토어 볼륨 데이터와 public IP가 변경되기에 Elastic IP를 할당하여 고정 IP를 사용하고\n만약 인스턴스스토어 볼륨을 사용한다면 미리 데이터를 백업해놓아야 합니다.\nSystem reboot : 예약된 시간에 인스턴스의 호스트가 재부팅됩니다.\n인스턴스의 재부팅이 아닌, 인스턴스가 올라가있는 호스트 하드웨어의 재부팅입니다.\n일반적인 사용자가 스스로 이벤트를 해소할 수 있는 방법이 없습니다.\n(일반적이지 못한 경우 : 인스턴스 위치를 어떻게든 찾아서 업체점검으로 속이고 치..침투하여 리붓)\n농담이고, AMI를 생성해서 다시 만들면 메인터넌스를 회피할 수 있습니다. (Instance reboot과 동일하게 Elastic IP 유지필요, 인스턴스스토어 볼륨 데이터 증발)\n필요에 의하지 않다면 AWS에 온전히 작업을 맡기는 것이 좋을 것 같습니다.\n다행히도 AWS가 시스템을 재부팅해도 DNS 이름이나 IP 주소와 같은 구성이 변경되지 않으며, 로컬 인스턴스 스토어에 저장된 데이터도 그대로 보존됩니다.\n통상 이러한 재부팅들은 수 분 내에 끝난다고 말하지만 대부분의 경우 3분안에 이벤트가 종료되었던 것으로 경험했습니다.\n모든 경우에서 서비스 서버(EC2)들은 AMI나 Snapshot을 통해 백업해두는 것이 가장 현명합니다.\n이제 메인 빌런인 갑작스러운 하드웨어 이슈에 의한 EC2 Reboot 입니다.\n보통 잘자다가 새벽에 천둥같은 알람이 울면 인스턴스의 모니터링 지표에 (System, Instance) Status check failed 알람이 발생하는 경우도 있습니다.\n이게 무엇인고하니, AWS는 두 가지 상태 확인을 통해 각 EC2 인스턴스 상태를 내부 모니터링 툴을 사용하여 모니터링합니다.\n자세한 내용은 AWS Docs에 잘나와있으니 축약하여 메모해놓겠습니다.\n 요약  시스템 상태 확인 실패(System status check failed)는 인스턴스가 실행되는 AWS 시스템에 문제가 있음을 나타냅니다. (하드웨어 이슈) 인스턴스 상태 확인 실패(Instance status check failed)는 대게 OOM(OutOfMemory) 등 리소스 이슈 혹은 잘못된 OS config 수정에 의해 발생합니다. (OS 이슈) ~~(간혹 커널이슈)    그렇기에 만약 인스턴스가 죽어서 Cloudwatch의 메트릭에서 위와같은 상태 검사 메트릭을 우선 확인한 뒤,\nCPU, memory (Custom Metric으로 받아와야합니다.), Volume IO 등 리소스 사용량과 콘솔 상에서 확인할 수 있는 시스템 로그를 통해 dmsg 로그 확인 및 본인이 마지막으로 서버에 무슨 작업을 했는지 확인해야하고 (어쩔때는 갑자기 DHCP서버에서 EC2가 IP를 못받아서 죽었던 경험도 있습니다. Network Manager issue 였죠..)\n시스템 상태검사 실패라면 재빠르게 stop/start 혹은 해당 이벤트를 트리거로 걸어두어 자동 reboot 작업을 걸어두는 것이 좋습니다.\nAWS 인스턴스 상태 모니터링 링크\n여러분 세상에 100% 안죽는 서버는 없습니다. (사장님 저는 안죽습니다)\n그러니 너무 스트레스 받아하지 마세요. 어쩔 수 없는걸요.\n서버 한 두대가 죽어도 서비스는 유지될 수 있도록 고가용성 구조를 구성하시는게 가장 좋습니다. 여기까지가 AWS나 파트너사의 입장이고 실제 운영하는 자사 입장으론 비용적으로 굉장히 부담스러운 일이 아닐 수 없습니다.\n그러하니 항상 두 가지만 생각하시면 됩니다.\n  서버는 갑작스럽게 죽을 수 있다. -\u0026gt; 고가용성 구조가 필요하다 -\u0026gt; 비용적으로 이슈가 있다 -\u0026gt; 모니터링 시스템이 의존도가 높을 수 밖에 없다. (가령 EC2 host issue alret 발생 시, EC2 auto reboot trigger 등)\n  AMI 백업을 주기적으로 실행한다.\n  이미 서버가 죽어서 서비스에 이슈가 발생했을 경우에 가장 필요한건 서비스의 빠른 Recovery이니까요.\n관련해서 나중에 모니터링관련(Promethus, logstash,Fluentd) 내용도 정리하도록 하겠습니다.\n","date":"June 22, 2021","hero":"/posts/cloud/aws/awshost_issue/images/host_thumnail.jpg","permalink":"https://hugo-toha.github.io/posts/cloud/aws/awshost_issue/","summary":"\u003cp\u003eAWS EC2 Maintenance에 대해 적어뒀습니다.\u003c/p\u003e","tags":null,"title":"서버가 갑자기 박살나셨습니다. -AWS"},{"categories":null,"contents":"CKA 취득을 위해 이론적으로 공부한 내용들을 간단하게 기록하였습니다.\nGKE(google Kubernetes Engine) 기존 쿠버네티스와 동일하게 Master(Control Plane)과 Worker Node로 구성되어있으며, GCP 관리형 서비스이기에 노드 확장 등의 편리함이 있다. (arg. AWS EKS\u0026hellip;) 그저, 위치와 k8s 버전, Network (VPC) 환경과 IP 대역만 설정하면 내부에 알아서 k8s cluster를 생성해준다.\nnode pool node에 대한 위치, 수량, 스펙, 운영체제, 셀프힐링, 노드 업그레이드 정책, 최대 Pod/node 갯수를 선택한다.\nGKE 클러스터 생성 세상이 이렇게 좋아졌다. 짧은 CLI 한줄로 GKE 클러스터를 생성할 수 있다.\ngcloud container clusters create dominic-gke-1 \u0026lt;---결과값---\u0026gt; kubeconfig entry generated for dominic-gke-1. NAME LOCATION MASTER_VERSION MASTER_IP MACHINE_TYPE NODE_VERSION NUM_NODES STATUS dominic-gke-1 us-central1-a 1.19.9-gke.1900 비-밀-임 e2-medium 1.19.9-gke.1900 3 RUNNING 3대의 노드로 이뤄진 GKE가 생성되었다. 클러스터 사용자 인증 정보가 필요하다.\nGKE 클러스터 인증정보 갱신 gcloud container clusters get-credentials dominic-gke-1 이제 GKE 셋팅은 완료하였으니, 뭐라도 배포해보자 제일 좋아하는 Hello, world를\u0026hellip;kubtctl create deployment를 통해 새 배포를 만들어준다.\nGKE deplotyment kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0 배포가 정상적으로 이뤄졌다면 파드가 올라와있는지 확인해보자.\nkubectl get pod -o wide \u0026lt;---결과값---\u0026gt; NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES hello-server-76d47868b4-q5mrf 1/1 Running 0 109s 10.40.0.6 gke-dominic-gke-1-default-pool-601c4b2c-tqvk \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; 파드가 gke-dominic-gke-1-default-pool-601c4b2c-tqvk라는 노드에 배포되어 1개의 컨테이너가 잘 실행되어있다.\nGKE expose serivce kubectl expose 명령어로 서비스를 노출해서 체크해보자\nkubectl expose deployment hello-server --type=LoadBalancer --port 8080 \u0026lt;---결과값---\u0026gt; service/hello-server exposed kubectl get service로 확인해보면\nkubectl get services \u0026lt;---결과값---\u0026gt; NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE hello-server LoadBalancer 10.43.246.172 \u0026lt;pending\u0026gt; 8080:32709/TCP 33s 생성한 service의 IP를 알 수 있다. 아직 Pending이면 우선 기다려보자. 내 서비스 LB의 IP는 34.134.44.184다.\nGKE service test 이렇게 외부에서 8080 포트를 통해 접근했을 때, 파드 내 컨테이너의 Hello, world web이 접근되는걸 볼 수 있다.\n깔끔하다. CNI도 고민없이 그냥 GKE의 CNI를 사용했다.\nGKE 기본 CNI 환경 \nGKE의 CNI를 사용하는 경우 가상 이더넷 기기(veth) 쌍의 한쪽 끝은 네임스페이스의 pod에 연결되고 다른 한쪽 끝은 Linux 브리지 기기 cbr0에 연결된다.\n이 경우 다음 명령어를 실행하면 cbr0에 연결된 pod의 MAC 주소가 표시된다.\narp -n 또한 이전 k8s-network에서 확인했듯이 brctl 명령어를 통해 cbr0에 연결된 각 veth 쌍의 루트 네임스페이스가 확인된다.\nbrctl show cbr0 GKE를 한번 써본 것으로 좀 더 kube~명령어에 익숙해진 느낌이랄까\u0026hellip;😅😅\n기분탓일지도 모른다.\n일단 CKA는 기간이 조금 남았으니, 스케줄을 잘 조절해서 한방에 취득해보자\u0026hellip;\n","date":"June 20, 2021","hero":"/posts/certification/cka/k8sgke%EC%82%AC%EC%9A%A9%EA%B8%B0/images/CKA_thumnail.jpg","permalink":"https://hugo-toha.github.io/posts/certification/cka/k8sgke%EC%82%AC%EC%9A%A9%EA%B8%B0/","summary":"\u003cp\u003eCKA 취득을 위해 이론적으로 공부한 내용들을 간단하게 기록하였습니다.\u003c/p\u003e","tags":null,"title":"k8s(GKE사용기)"},{"categories":null,"contents":"CKA 취득을 위해 이론적으로 공부한 내용들을 간단하게 기록하였습니다.\n배경 컨테이너 Network부터 Pod Network까지 이론정리\nDocker Networking  격리된 환경에서 실행되는 하나의 프로세스 위에서 격리된 환경을 구현하는 기술은 chroot, cgroups, namespace  namespace : 네트워크인터페이스, 라우팅, 방화벽 규칙들을 격리한다. 이런 namespace로 인해 격리된 PID들은 veth를 통해 연결한다. veth : linked virtual ethernet device pair = 항상 쌍 (pair)로 생성되어 연결된 상태를 유지한다.    직접 Namespace를 생성해보자.\nlocal namespace와 ipnetns add를 통해 만든 namespace에 veth를 붙여봤다.\n컨테이너를 새로이 배포할때마다 컨테이너에게 veth0라는 가상 네트워크 인터페이스를 할당하여 docker0에 연결, linked virtual ethernet device pair로 컨테이너와 bridge를 연결한다.\n 도커 설치 직후 상태  bridge Network 결국 컨테이너 네트워크 인터페이스 (Namesapce 내 veth)들은 bridge(docker0 : docker 시작시 기본적으로 생성되는 bridge)를 통해 연결되어 하나의 세그먼트로 구성되지만, 같은 bridge에 연결되지 않은 컨테이너들은 격리된 공간을 유지한다.\n[eth0 -\u0026gt; docker0(bridge) -\u0026gt; veth0(host) \u0026lt;-[pairing]-\u0026gt; veth0(container) -\u0026gt; container]\n위 이미지에서 bridge의 subnet과 Gateway를 보고 밑에 container의 IP를 보면 확실하다.\n아니면 brctl show 명령어를 통해 bridge에 연결되어있는 Interface에 veth를 확인하면 된다.\ndefault bridge 말고, custom bridge를 생성하여 별도의 네트워크 구성도 물론 가능하다고 하지만, 해보진 않았으므로 잠시 미뤄두겠다.\nHost Networking Host에서 사용하고 있는 네트워크를 그대로 컨테이너가 사용한다.\n그렇기 떄문에 컨테이너에 IP(veth)를 할당하지 않기에 bridge에 바인딩이 되지 않는다.\noverlay Networking 다른 도커 데몬 host의 container와 통신하기 위해 보통 OS레벨에서의 라우팅이 필요하지만, Overlay 네트워크를 사용하여 분산 네트워크(arg. Swarm service)를 구성할 수 있다.\nnone Networking none : 모든 네트워킹 드라이버, 그 어떠한 인터페이스도 없는 설정이다. 보통 커스텀 네트워크 드라이버를 구성할 경우 사용한다.\nmacvlan, ipvlan Networking 말그대로 가상 mac주소를 할당하여 물리적 호스트처럼 보이도록 설정하거나, L2,L3 모드가 필요할 때 사용한다.\nk8s Networking Pod Networking Container Network에서 설명했듯이, 각각의 컨테이너는 독립적인 namesapce를 통해 격리되어진다.\n여기서 k8s의 Pods의 개념이 들어가면 같은 pod의 컨테이너들은 Network namespace를 공유한다.(컨테이너가 N개여도 veth는 1개) 그렇기에 동일한 IP를 사용한다.\n따라서 lookback 인터페이스를 통해 localhost+port 통신이 가능하다.\n이 Pod 내 컨테이너들의 Namespace를 공유해주는게 바로 pause 컨테이너이다.\nDocker Test GCP 환경에서 docker를 사용하여 이미지를 빌드하고 실행해봅시다.\nDocker 컨테이너 빌드, 실행과 Docker Hub 및 Google Container Registry에서 Docker 이미지 가져오기\n그리고 Dockerfile을 통해 이미지를 생성하는 법에 대해 간단하게 확인해봤습니다.\nHello World GCP에서 제공하는 Cloud shell을 열어 Hello world 컨테이너를 실행합니다.\ndocker run hello-world \u0026lt;--명령어 결과--\u0026gt; Unable to find image 'hello-world:latest' locally latest: Pulling from library/hello-world b8dfde127a29: Pull complete Digest: sha256:9f6ad537c5132bcce57f7a0a20e317228d382c3cd61edae14650eec68b2b345c Status: Downloaded newer image for hello-world:latest Hello from Docker! This message shows that your installation appears to be working correctly. 이 컨테이너는 shell에 \u0026ldquo;Hello from Docker!\u0026ldquo;라는 메시지를 반환합니다. 결과는 간단하지만 결과가 나오기 전에 이미지를 불러오는 과정을 확인해봅시다.\n로컬이미지에 Hello world이미지가 없기에 docker deamon은 docker hub라는 public registry에서 해당 이미지를 pull하여 컨테이너를 생성하고 실행하는 과정을 통해 위 메세지를 반환합니다.\ndocker hub에서 가져온 이미지를 확인해봅시다.\ndocker images \u0026lt;--명령어 결과--\u0026gt; REPOSITORY TAG IMAGE ID CREATED SIZE hello-world latest d1165f221234 3 months ago 13.3kB 여기서 알 수 있는 사실은 로컬에 이미지를 가지고 있지 않아도 docker deamon은 알아서 docker hub라는 public registry에서 이미지를 검색한다는 점입니다.\n이미지를 로컬로 Pull하였기에 두번쨰 실행부터는 바로 로컬이미지를 통해 컨테이너를 생성, 실행할 수 있는 것 입니다. 위 이미지는 echo \u0026ldquo;Hello from Docker!\u0026ldquo;를 실행하고 사라졌네요 마치 k8s의 jobs같습니다. 실제로 Docker ps -a 를 통해 컨테이너를 확인해보면 컨테이너가 종료되었음을 알 수 있습니다.\ndocker ps -a \u0026lt;--명령어 결과--\u0026gt; CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES d36437eeb64a hello-world \u0026quot;/hello\u0026quot; About a minute ago Exited (0) About a minute ago sweet_pare 359b95d41706 hello-world \u0026quot;/hello\u0026quot; 2 minutes ago Exited (0) 2 minutes ago happy_ritchie docker run을 시작할때 옵션으로 \u0026ndash;name을 주면 뒤에 무작위로 붙는 Names 라벨을 설정해줄 수 도 있습니다.\nDockerFile build / run Test Dockerfile을 통해 직접 이미지를 빌드할 수 있습니다. 간단하게 CentOS에 Httpd를 띄우는 Dockerfile을 작성합니다.\ncat \u0026gt; Dockerfile \u0026lt;\u0026lt;EOF # CentOS7를 사용합니다. FROM centos:7 # 컨테이너에서 http 패키지를 설치해줍니다. RUN yum -y install httpd # 현재 디렉토리의 내용을 컨테이너 내부로 복사합니다. ADD /write-http.sh /write-http.sh # 컨테이너에서 write-http.sh를 실행할 수있도록 권한을 변경합니다. RUN chmod 755 /write-http.sh # 서비스를 위해 컨테이너의 포트 80을 외부에 공개합니다. EXPOSE 80 # 컨테이너가 시작될 때 write-http.sh 스크립트를 실행합니다. ENTRYPOINT [\u0026quot;sh\u0026quot;,\u0026quot;/etc/write-http.sh\u0026quot;] EOF # write-http.sh 내용 #!/bin/sh /usr/sbin/httpd -D FOREGROUND 이미지를 빌드하여 컨테이너에 띄워보면 아래와 같이 컨테이너가 생성됨을 알 수 있다.\ndocker build -t dominic-web:0.1 . \u0026lt;--명령어 결과--\u0026gt; Sending build context to Docker daemon 3.072kB Step 1/6 : FROM centos:7.5.1804 ---\u0026gt; cf49811e3cdb Step 2/6 : RUN yum -y install httpd ---\u0026gt; Using cache ---\u0026gt; b04936c42e77 Step 3/6 : ADD /write-http.sh /write-http.sh ---\u0026gt; 79d1a552ea2a Step 4/6 : RUN chmod 755 /write-http.sh ---\u0026gt; Running in 9041f099a392 Removing intermediate container 9041f099a392 ---\u0026gt; 96ce83e42fce Step 5/6 : EXPOSE 80 ---\u0026gt; Running in eb46efbe7e84 Removing intermediate container eb46efbe7e84 ---\u0026gt; b39def1a021e Step 6/6 : ENTRYPOINT [\u0026quot;sh\u0026quot;,\u0026quot;/etc/write-http.sh\u0026quot;] ---\u0026gt; Running in 7e258ee5d665 Removing intermediate container 7e258ee5d665 ---\u0026gt; d3924f695483 Successfully built d3924f695483 Successfully tagged dominic-web:0.1 docker images \u0026lt;--명령어 결과--\u0026gt; REPOSITORY TAG IMAGE ID CREATED SIZE dominic-web 0.1 d3924f695483 40 seconds ago 353MB 이후 docker run command를 통해 이미지를 컨테이너에 실행시키면 된다.\ndocker run -d -p 80:80 dominic-web:0.1 -d 옵션을 안주면 Foreground에서 동작하기에 쉘을 움직을 수가 없으니, -d 옵션으로 도커 컨테이너가 background에서 동작될 수 있도록 합시다!\n만약 다른 버전의 이미지를 생성하고 싶다면 간단합니다. 그냥 빌드할때, 태그를 달리해주면 된다.\ndocker build -t dominic-web:0.2 . 이후 빌드를하면 기존에 캐시되어있던 레이어는 넘어가고 변경사항이 생긴 레이어에서 수정이 발생함을 알 수 있을 것입니다.\n결과 ! curl로 확인해보니, httpd default page가 쫙~~나오네요. 다음엔 index.html을 좀 추가해야될듯 ㅎㅎ;\n간단하게 docker 테스트 진행해봤습니다.\n","date":"June 19, 2021","hero":"/posts/certification/cka/k8snetworking/images/CKA_thumnail.jpg","permalink":"https://hugo-toha.github.io/posts/certification/cka/k8snetworking/","summary":"\u003cp\u003eCKA 취득을 위해 이론적으로 공부한 내용들을 간단하게 기록하였습니다.\u003c/p\u003e","tags":null,"title":"k8s(Networking)"},{"categories":null,"contents":"시작합시다.😎 도며든다\u0026hellip;도며든다\u0026hellip;\n안녕하세요, Dominic입니다.\n여유가 생길때마다 무엇이든, 어떤 내용이든 기록하고자 합니다.\n커다란 메모장이라고 생각해주세요. 100% 메모장\n방문하신 여러분들에게 조금이나마 도움이 되는 글이 되었기를 소망해봅니다. (●'◡'●)\n\u0026hellip;Written by Dominic (2021)\n LinkedIn | AWSKRUG | 2021-목표\n","date":"June 18, 2021","hero":"/posts/about_dominic/hero.svg","permalink":"https://hugo-toha.github.io/posts/about_dominic/","summary":"\u003cp\u003e시작합시다.😎 도며든다\u0026hellip;도며든다\u0026hellip;\u003c/p\u003e","tags":null,"title":"About_dominic😎"},{"categories":null,"contents":"CKA 취득을 위해 이론적으로 공부한 내용들을 간단하게 기록하였습니다.\nk8s Architecture 환경 : Amazon Linux 2 (t2 패밀리) k8s version : v1.21 설치 방법 : Kubeadm | CNI : Calico  Master node와 worker Node로 구성됨  master node 구성 : API server, Scheduler, Controller, etcd (클러스터의 상태, 컨테이너설정, 네트워킹 구성 등 관리) -각 control plane component들은 뒤에서 상세히 다룰 에정. Worker node 구성 : kubelet, kube-proxy   k8s 동작 방식  API server를 통해 API를 노출한다. Kubectl이라는 로컬 클라이언트를 사용하여 API와 통신한다. Scheduler는 이러한 API들을 적절한 노드로 할당해주는 스케줄링 작업을 담당한다. 각 worker node들에서 kubelet은 컨테이너 실행 요청을 수신하고 필요한 리소스들을 관리한다. 각 worker node들에서 kube-proxy는 컨테이너의 네트워크를 담당한다.    기본적으로 각 pod에서는 클러스터의 모든 노드에서 실행되는 다른 모든 pod에 대한 액세스가 제한되지 않지만 개발자가 pod 간 액세스를 제한할 수 있다.\n또한 노드 풀이 업그레이드될 때, pod의 선언적 구성을 변경하거나 컨테이너의 이미지를 변경할 때 또는 노드가 사용 불가능하게 될 때 Control Plane에서는 스케쥴러에 의해 파드의 구성이 변경된다.\n따라서 pod의 IP 주소는 구현에 따라 달라지며, Pod의 IP를 의존하면 안된다. 서비스를 사용해서 안정적인 IP를 확인하여야 한다.\nk8s Component  Control Plane   worker node와 클러스터 내 파드를 관리  kube-scheduler : 정의된 replicaset의 요구조건 충족, 노드가 배정되지않은 파드의 배치 등등 worker node에 있는 Pod를 스케줄링하는 역할 kube-apiserver : Control Plane의 FE / API를 노출하는 역할 / k8s Cluster와 상호작용을 위한 api 서버 etcd : 클러스터의 상태를 저장하여 일관성을 유지한다. (Data store) / Master Cluster에서 k8s object 저장소로 사용 kube-controller-manager :Deployments나 replcation Controller등 관리  node-controller replication-controller endpoint-controller service-account\u0026amp;token-controller   cloud-controller-manager :Public Cloud Provider 연동 관리  node-controller route-contoller service-contoller      Node Component   worker node 내 pod들을 유지  Kubelet : k8s를 통해 생성된 Pod 내 컨테이너의 동작에 관여한다. 가령 정확한 스펙에 따라 동작하는지 등.. kube-proxy : 각 worker node에서 실행되는 proxy로 서비스의 개념을 구현한다. (Inbound,Outbound) container runtime : docker, cri-o 등등..    CNI (Contanier Network Interface)   Pod가 생성되고 삭제될 때, 호출되는 API의 규격과 인터페이스를 정의해준다. (그니까.. Pod Network를 구축하는 플러그인들) CNI마다 기본적으로 차지하는 리소스가 있기에 목적에 맞게..사용해야한다. 이미 훌륭하신분들이 테스트한 자료가 구글에\u0026hellip;!! 결론적으로 성능이 잘 나와야하고, 부가기능(ACL)을 지원하는 등 목적에 맞게 선택해야 된다. 영원한 선택의 늪  k8s Object   Pod : Worker Node 내 컨테이너들의 집합 (비영구적이다.)\n 하나의 pod에는 한개 이상의 서비스로 지정될 수 있다. 각각의 pod에는 veth가 할당됨 (파드내 컨테이너들은 veth, PID, 를 공유 [누가?! pause 컨테이너])    Service : Label로 묶어서 Endpoint를 노출시킴\n  configmap : pod에 담겨진 컨테이너에서 사용되는 구성 값\n  secret : 특수 볼륨에 연결되어 컨테이너에서 사용가능 (mysql 패스워드 같은것들을 저장해두고 환경변수로 가져오는 방식으로 사용)\n  deployment Controller : pod 배포 및 관리에 사용하는 컨트롤러 : ReplicaSet을 자동으로 생성 : pod에 대한 Rolling 업데이트를 관리 (versioning)\n ReplicaSet : 사용자가 template에 명시해둔 Pod의 갯수를 유지한다. StatefulSet : Pod별 고정된 identity 할당 (name, network id 등) DamonSet : 모든 node에 배포되어 실행 (Node Selector로 정의하는 경우 일부 node에서 실행시키는 등 제어 가능, ) : 특정 노드 또는 모든 노드에 항상 실행되어 있어야 하는 특정 파드들을 관리한다. 가령 로그수집용도의 파드들..! Jobs : batch성 작업들, 특성 task 실행을 위해 하나 이상의 pod를 생성해서 task를 실행한 후 완료되면 Pod를 제거한다. (순차, 동시실행 지원, 다만 Lifecycle설정필요)    Volume : Pod에 연결되어 디렉토리 형태로 데이터를 저장 (파드 간 컨테이너끼리 공유하며 Pod와 동일한 수명주기를 가짐)\n  PersistentVolume : k8s에서 관리하는 저장소, Pod와 독립적은 수명주기를 가짐(사용자가 PVC를 정의하고 생성하면 대응하는 PV가 생기는 형식)\n  알아두면 좋을 3rt party tool  Helm : 사전 정의된 k8s 리소스에 대한 패키지 Kompose : docker compose를 K8s object로 변환 ","date":"June 17, 2021","hero":"/posts/certification/cka/k8scomponent/images/CKA_thumnail.jpg","permalink":"https://hugo-toha.github.io/posts/certification/cka/k8scomponent/","summary":"\u003cp\u003eCKA 취득을 위해 이론적으로 공부한 내용들을 간단하게 기록하였습니다.\u003c/p\u003e","tags":null,"title":"k8s(component)"},{"categories":null,"contents":"This is a sample post intended to test the followings:\n Default hero image. Different shortcodes.  Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;.  This is sample alert with type=\u0026quot;danger\u0026quot;.  This is sample alert with type=\u0026quot;warning\u0026quot;.  This is sample alert with type=\u0026quot;info\u0026quot;.  This is sample alert with type=\u0026quot;dark\u0026quot;.  This is sample alert with type=\u0026quot;primary\u0026quot;.  This is sample alert with type=\u0026quot;secondary\u0026quot;.  Image A sample image without any attribute.  A sample image with height and width attributes.  A center aligned image with height and width attributes.  A image with float attribute. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien fringilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\nSplit This theme support splitting the page into as many columns as you wish.\nTwo column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.  Right Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.   Three column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.  Middle Column Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum.  Right Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.   Vertical Space Give vertical space between two lines.\nThis is line one.  This is line two. It should have 4rem vertical space with previous line.\nVideo  Video by Rahul Sharma from Pexels.\n","date":"June 8, 2020","hero":"/posts/shortcodes/boat.jpg","permalink":"https://hugo-toha.github.io/posts/shortcodes/","summary":"This is a sample post intended to test the followings:\n Default hero image. Different shortcodes.  Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;.  This is sample alert with type=\u0026quot;danger\u0026quot;.  This is sample alert with type=\u0026quot;warning\u0026quot;.  This is sample alert with type=\u0026quot;info\u0026quot;.  This is sample alert with type=\u0026quot;dark\u0026quot;.  This is sample alert with type=\u0026quot;primary\u0026quot;.  This is sample alert with type=\u0026quot;secondary\u0026quot;.","tags":null,"title":"Shortcodes Samples"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"}]